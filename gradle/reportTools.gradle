import groovy.json.JsonBuilder

static def nested(Node node) {
    def result = node.attributes()
    def children = new LinkedHashMap<String, List<Map>>()
    node.children().each { child ->
        println " - class: ${child.class}"
        if (child instanceof Node) {
            String name = child.name()
            String childKeyName = "${name}List"
            List list = children.get(childKeyName)
            if (list == null)
                list = new LinkedList()
            list.add(nested(child))
            children.put(childKeyName, list)
        } else {
            println " - node: ${node.name()} value $child"
            result = child
        }
    }
    if (!children.isEmpty())
        result.putAll(children)
    return result
}

def xmlAsJson(String... path) {
    task uploadReports {
        doLast {
            def result = path.collect { fileTree(dir: project.buildDir, includes: [it]).asList() }
                    .flatten()
                    .findAll { it.exists() }
                    .collectEntries { file ->
                println file.name
                def jsonRoot = nested(new XmlParser().parse(file))
                [(file.name): jsonRoot]
            }
            println new JsonBuilder(result)
        }
    }
}

xmlAsJson("reports/checkstyle/main.xml", "ktlint.xml", "test-results/test/TEST**.xml", "lint-results.xml")